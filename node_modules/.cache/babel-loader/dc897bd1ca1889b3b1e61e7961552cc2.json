{"ast":null,"code":"export default {\n  name: \"get-request-async-await\",\n\n  data() {\n    return {\n      latitude: 0,\n      longitude: 0,\n      airportDistanceKm: 0,\n      airportDistanceMi: 0,\n      postCode: '',\n      responseStatus: 0,\n      elementVisible: true\n    };\n  },\n\n  methods: {\n    async created() {\n      if (!this.elementVisible) {\n        this.elementVisible = true;\n      }\n\n      setTimeout(() => this.elementVisible = false, 1500);\n\n      if (!this.postCode) {\n        return;\n      } // GET request using fetch with async/await\n\n\n      const response = await fetch(`http://api.postcodes.io/postcodes/${this.postCode}`);\n      this.responseStatus = response.status;\n\n      if (response.status === 404) {\n        return;\n      }\n\n      const data = await response.json();\n      const longitude = data.result.longitude;\n      const latitude = data.result.latitude;\n      this.latitude = latitude;\n      this.longitude = longitude;\n      this.airportDistanceKm = (calcCrow(51.4700223, -0.4542955, latitude, longitude) * 1.6).toFixed(2);\n      this.airportDistanceMi = calcCrow(51.4700223, -0.4542955, latitude, longitude).toFixed(2); //This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\n\n      function calcCrow(lat1, lon1, lat2, lon2) {\n        let R = 6371; // km\n\n        let dLat = toRad(lat2 - lat1);\n        let dLon = toRad(lon2 - lon1);\n        let airportLat1 = toRad(lat1);\n        let postCodeLat2 = toRad(lat2);\n        let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(airportLat1) * Math.cos(postCodeLat2);\n        let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        let d = R * c;\n        return d;\n      } // Converts numeric degrees to radians\n\n\n      function toRad(Value) {\n        return Value * Math.PI / 180;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4DA,eAAe;EACXA,IAAI,EAAE,yBADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE,CADP;MAEHC,SAAS,EAAE,CAFR;MAGHC,iBAAiB,EAAE,CAHhB;MAIHC,iBAAiB,EAAE,CAJhB;MAKHC,QAAQ,EAAE,EALP;MAMHC,cAAc,EAAE,CANb;MAOHC,cAAc,EAAE;IAPb,CAAP;EASH,CAZU;;EAaXC,OAAO,EAAE;IAEL,MAAMC,OAAN,GAAgB;MAEZ,IAAI,CAAC,KAAKF,cAAV,EAAyB;QACrB,KAAKA,cAAL,GAAsB,IAAtB;MACJ;;MACAG,UAAU,CAAC,MAAM,KAAKH,cAAL,GAAsB,KAA7B,EAAoC,IAApC,CAAV;;MAEA,IAAI,CAAC,KAAKF,QAAV,EAAoB;QAChB;MACJ,CATY,CAUZ;;;MACA,MAAMM,QAAO,GAAI,MAAMC,KAAK,CAAE,qCAAoC,KAAKP,QAAS,EAApD,CAA5B;MACA,KAAKC,cAAL,GAAsBK,QAAQ,CAACE,MAA/B;;MACA,IAAIF,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;QACzB;MACJ;;MACA,MAAMb,IAAG,GAAI,MAAMW,QAAQ,CAACG,IAAT,EAAnB;MACA,MAAMZ,SAAQ,GAAIF,IAAI,CAACe,MAAL,CAAYb,SAA9B;MACA,MAAMD,QAAO,GAAID,IAAI,CAACe,MAAL,CAAYd,QAA7B;MACA,KAAKA,QAAL,GAAgBA,QAAhB;MACA,KAAKC,SAAL,GAAiBA,SAAjB;MACA,KAAKC,iBAAL,GAAyB,CAACa,QAAQ,CAAC,UAAD,EAAa,CAAC,SAAd,EAAyBf,QAAzB,EAAmCC,SAAnC,CAAR,GAAwD,GAAzD,EAA8De,OAA9D,CAAsE,CAAtE,CAAzB;MACA,KAAKb,iBAAL,GAAyBY,QAAQ,CAAC,UAAD,EAAa,CAAC,SAAd,EAAyBf,QAAzB,EAAmCC,SAAnC,CAAR,CAAsDe,OAAtD,CAA8D,CAA9D,CAAzB,CAtBY,CAwBZ;;MACA,SAASD,QAAT,CAAkBE,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;QACtC,IAAIC,IAAI,IAAR,CADsC,CACxB;;QACd,IAAIC,IAAG,GAAIC,KAAK,CAACJ,IAAG,GAAIF,IAAR,CAAhB;QACA,IAAIO,IAAG,GAAID,KAAK,CAACH,IAAG,GAAIF,IAAR,CAAhB;QACA,IAAIO,WAAU,GAAIF,KAAK,CAACN,IAAD,CAAvB;QACA,IAAIS,YAAW,GAAIH,KAAK,CAACJ,IAAD,CAAxB;QAEA,IAAIQ,IAAIC,IAAI,CAACC,GAAL,CAASP,IAAG,GAAI,CAAhB,IAAqBM,IAAI,CAACC,GAAL,CAASP,IAAG,GAAI,CAAhB,CAArB,GACJM,IAAI,CAACC,GAAL,CAASL,IAAG,GAAI,CAAhB,IAAqBI,IAAI,CAACC,GAAL,CAASL,IAAG,GAAI,CAAhB,CAArB,GAA0CI,IAAI,CAACE,GAAL,CAASL,WAAT,CAA1C,GAAkEG,IAAI,CAACE,GAAL,CAASJ,YAAT,CADtE;QAEA,IAAIK,IAAI,IAAIH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,IAAL,CAAUN,CAAV,CAAX,EAAyBC,IAAI,CAACK,IAAL,CAAU,IAAIN,CAAd,CAAzB,CAAZ;QACA,IAAIO,IAAIb,IAAIU,CAAZ;QACA,OAAOG,CAAP;MACJ,CArCY,CAsCZ;;;MACA,SAASX,KAAT,CAAeY,KAAf,EAAsB;QAClB,OAAOA,KAAI,GAAIP,IAAI,CAACQ,EAAb,GAAkB,GAAzB;MACJ;IACJ;;EA5CK;AAbE,CAAf","names":["name","data","latitude","longitude","airportDistanceKm","airportDistanceMi","postCode","responseStatus","elementVisible","methods","created","setTimeout","response","fetch","status","json","result","calcCrow","toFixed","lat1","lon1","lat2","lon2","R","dLat","toRad","dLon","airportLat1","postCodeLat2","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI"],"sourceRoot":"","sources":["/Users/tiagonunes/Documents/dev/pt-tiago-nunes-01/address-uk/src/components/GetPostCode.vue"],"sourcesContent":["<template>\n    <div class=\"card text-center m-3\">\n        <h1>Postcode</h1>\n\n        <div class=\"flex justify-center\">\n            <div class=\"mb-3 xl:w-96\">\n                <div class=\"input-group relative flex flex-wrap items-stretch w-full mb-4\">\n                    <input type=\"search\" v-model=\"postCode\"\n                        class=\"form-control relative flex-auto min-w-0 block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n                        placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"button-addon2\">\n                    <button @click=\"created\"\n                        class=\"btn inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700  focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out flex items-center\"\n                        type=\"button\" id=\"button-addon2\">\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"search\" class=\"w-4\"\n                            role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                            <path fill=\"currentColor\"\n                                d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\">\n                            </path>\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <h1 v-show=\"elementVisible\" v-if=\"responseStatus === 404\" class=\"flex justify-center mb-5\">\n            <div class=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4\" role=\"alert\">\n                <p class=\"font-bold\">Error!</p>\n                <p>No data was found for postcode: <strong>{{ postCode }}</strong></p>\n            </div>\n        </h1>\n\n        <div v-else>\n            <div class=\"card-body\">Longitude: <strong>{{ longitude }}</strong></div>\n            <div class=\"card-body\">Latitude: <strong>{{ latitude }}</strong></div>\n            <div class=\"card-body\">Distance from London Heathrow airport in km: <strong>{{ airportDistanceKm }}</strong>\n            </div>\n            <div class=\"card-body\">Distance from London Heathrow airport in mi: <strong>{{ airportDistanceMi }}</strong>\n            </div>\n        </div>\n\n        <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"/docs/images/blog/image-1.jpg\" alt=\"\" />\n    </a>\n    <div class=\"p-5\">\n        <a href=\"#\">\n            <h5 class=\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">Noteworthy technology acquisitions 2021</h5>\n        </a>\n        <p class=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.</p>\n        <a href=\"#\" class=\"inline-flex items-center py-2 px-3 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\n            Read more\n            <svg class=\"ml-2 -mr-1 w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\n        </a>\n    </div>\n</div>\n\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"get-request-async-await\",\n    data() {\n        return {\n            latitude: 0,\n            longitude: 0,\n            airportDistanceKm: 0,\n            airportDistanceMi: 0,\n            postCode: '',\n            responseStatus: 0,\n            elementVisible: true,\n        };\n    },\n    methods: {\n\n        async created() {\n            \n            if (!this.elementVisible){\n                this.elementVisible = true;\n            }\n            setTimeout(() => this.elementVisible = false, 1500)\n\n            if (!this.postCode) {\n                return;\n            }\n            // GET request using fetch with async/await\n            const response = await fetch(`http://api.postcodes.io/postcodes/${this.postCode}`);\n            this.responseStatus = response.status;\n            if (response.status === 404) {\n                return;\n            }\n            const data = await response.json();\n            const longitude = data.result.longitude\n            const latitude = data.result.latitude\n            this.latitude = latitude;\n            this.longitude = longitude;\n            this.airportDistanceKm = (calcCrow(51.4700223, -0.4542955, latitude, longitude) * 1.6).toFixed(2)\n            this.airportDistanceMi = calcCrow(51.4700223, -0.4542955, latitude, longitude).toFixed(2)\n\n            //This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\n            function calcCrow(lat1, lon1, lat2, lon2) {\n                let R = 6371; // km\n                let dLat = toRad(lat2 - lat1);\n                let dLon = toRad(lon2 - lon1);\n                let airportLat1 = toRad(lat1);\n                let postCodeLat2 = toRad(lat2);\n\n                let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n                    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(airportLat1) * Math.cos(postCodeLat2);\n                let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n                let d = R * c;\n                return d;\n            }\n            // Converts numeric degrees to radians\n            function toRad(Value) {\n                return Value * Math.PI / 180;\n            }\n        }\n    },\n\n};\n</script>"]},"metadata":{},"sourceType":"module"}